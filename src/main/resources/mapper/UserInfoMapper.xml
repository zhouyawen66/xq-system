<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cnaidun.police.mapper.UserInfoMapper">

    <resultMap type="com.cnaidun.police.entity.UserInfo" id="userInfoResult">
        <result property="id" column="id"/>
        <result property="account" column="account"/>
        <result property="userName" column="user_name"/>
        <result property="password" column="password"/>
        <result property="salt" column="salt"/>
        <result property="status" column="status"/>
        <result property="roleId" column="role_id"/>
        <collection property="permissions" select="findPermissionList" column="role_id"/>
    </resultMap>

    <resultMap id="permissionsMap" type="com.cnaidun.police.entity.SysPermission">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="resourceType" column="resource_type"/>
        <result property="url" column="url"/>
        <result property="permission" column="permission"/>
        <result property="parentId" column="parent_id"/>
        <result property="icon" column="icon"/>
    </resultMap>

    <insert id="addUserInfo" parameterType="com.cnaidun.police.entity.UserInfo" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO sys_user(
        account,
        user_name,
        password,
        salt,
        role_id,
        community_code,
        community_unit_name,
        email
        )VALUES(
        #{account},
        #{userName},
        #{password},
        #{salt},
        #{roleId},
        #{communityCode},
        #{communityUnitName},
        #{email}
        )
    </insert>

    <update id="updateUserInfo">
        UPDATE sys_user u
        SET
        u.user_name =#{userName},
        u.password =#{password},
        u.salt =#{salt}
        WHERE
        u.id = #{id}
    </update>

    <update id="dropUserInfo">
        UPDATE sys_user u
        SET
        u.status = '-1'
        WHERE
        u.id = #{id}
    </update>

    <update id="updatePWD">
        UPDATE sys_user u
        SET
        u.password = #{password},
        u.salt = #{salt}
        WHERE
        u.id = #{id}
    </update>


    <select id="findByAccount" parameterType="java.lang.String" resultMap="userInfoResult">
        SELECT
            userInfo.*
        FROM
            sys_user userInfo
        WHERE
            userInfo.account = #{account}
        AND userInfo.status = '1'
    </select>

    <select id="findPermissionList" parameterType="java.lang.Integer" resultMap="permissionsMap">
        SELECT
            sysPermission.*
        FROM
            sys_permission sysPermission
        LEFT JOIN sys_role_permission sysRolePermission ON sysPermission.id = sysRolePermission.permission_id
        WHERE
            sysRolePermission.role_id = #{roleId}
        AND sysPermission.available = '1'
    </select>

    <select id="findUserPermissions" parameterType="java.lang.String"
            resultType="com.cnaidun.police.dto.MenuResponseDTO">
            SELECT
                sysPermission.id id,
                sysPermission.`name` label,
                sysPermission.resource_type type,
                sysPermission.url url,
                sysPermission.button_type buttonType,
                sysPermission.parent_id parentId,
                sysPermission.icon icon
            FROM
                sys_user userInfo
            LEFT JOIN sys_role sysRole ON userInfo.role_id = sysRole.id
            LEFT JOIN sys_role_permission sysRolePermission ON sysRole.id = sysRolePermission.role_id
            LEFT JOIN sys_permission sysPermission ON sysRolePermission.permission_id = sysPermission.id
            WHERE
                userInfo.account = #{account}
            AND userInfo.status = '1'
            AND sysPermission.available = '1'
            AND sysRole.status = '1'
            GROUP BY
                sysPermission.id
            ORDER BY
    	        sysPermission.sort DESC
        </select>

    <!--<select id="findUserPermissions" parameterType="java.lang.String"-->
    <!--resultType="com.cnaidun.police.dto.MenuResponseDTO">-->
    <!--SELECT-->
    <!--sp.id id,-->
    <!--sp.title title,-->
    <!--sp.parent_id pid,-->
    <!--sp.url url,-->
    <!--sp.`describe` `describe`-->
    <!--FROM-->
    <!--sys_user userInfo-->
    <!--LEFT JOIN sys_role_promission srp ON userInfo.role_id= srp.role_id-->
    <!--LEFT JOIN sys_role sr ON userInfo.role_id= sr.id-->
    <!--LEFT JOIN sys_promission sp ON srp.premission_id = sp.id-->
    <!--where userInfo.user_name=#{account}-->
    <!--AND userInfo.`status` ='1'-->
    <!--AND sp.`status`='1'-->
    <!--AND sr.`status`='1'-->
    <!--GROUP BY-->
    <!--sp.id-->
    <!--ORDER BY-->
    <!--sp.sort DESC-->
    <!--</select>-->

    <select id="queryAll" resultType="java.util.Map">
        SELECT
        u.id as id,
        u.user_name as userName,
        date_format(u.create_time, '%Y-%m-%d %H:%i:%S') createTime
        FROM
        sys_user u
        where u.state = '1'
        and u.account!='aidun'
    </select>

    <select id="getSalt" resultType="java.lang.String">
        SELECT
        u.salt as salt
        FROM
        sys_user u
        WHERE
        u.id = #{id}
    </select>

    <select id="isPasswordRight" resultType="java.lang.Boolean">
        SELECT
        COUNT(1)
        FROM
        sys_user u
        WHERE
        u.password = #{password}
        AND
        u.salt = #{salt}
    </select>

    <select id="getAdminList" resultType="com.cnaidun.police.vo.UserInfoVo">
        SELECT
         u.id id,
        u.user_name userName,
        u.account account,
        u.community_code,
        u.community_unit_name,
        u.integral integral,
        u.phone phone,
        u.open_id openId,
        u.status status,
        r.role_name roleName
        FROM
        sys_user u
         LEFT JOIN sys_role r on u.role_id =r.id
        where u.status != '-1' and u.role_id !=2
        <if test="account!=null">
            and u.account like concat(#{account},'%')
        </if>
    </select>

    <select id="getHouseholdList" resultType="com.cnaidun.police.vo.UserInfoVo">
        SELECT
        u.id id,
        u.user_name userName,
        u.account account,
        u.community_code,
        u.community_unit_name,
        u.integral integral,
        u.phone phone,
        u.open_id openId,
        u.status status,
        r.role_name roleName
        FROM
        sys_user u
        LEFT JOIN sys_role r on u.role_id =r.id
        where u.status != '-1' and u.role_id=2
        <if test="account!=null">
            and u.account like concat(#{account},'%')
        </if>
    </select>


    <select id="getUserIntegrateScoreList" resultType="com.cnaidun.police.vo.TbScoreSituationRecordVo">
        SELECT
        t.id id,
        t.householder_id householderId,
        t.householder_name householderName,
        t.recorder_name recorderName,
        t.score score,
        t.create_time createTime
        FROM
        tb_score_situation_record t
        where t.householder_id =#{id}
    </select>

    <select id="getUserScoreList" resultType="com.cnaidun.police.vo.TbScoreRecordDetailVo">
        SELECT
        t.id id,
        t.community_unit_name communityUnitName,
        tg.project_content projectContent,
        t.score score,
        (case t.status when '1' then '正常' when '2' then '申诉中'  when '3' then '已处理' end ) status,
        t.create_time createTime
        FROM
        tb_score_record_detail t
        left join tb_score_project_config tg on tg.id=t.project_id
        where t.situation_id =#{id} and t.user_id =#{userId}
    </select>



    <update id="updateUserStatus">
        UPDATE sys_user
            SET status=#{status} where id=#{id}
    </update>


    <select id="findAccountByOpenId" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT account FROM sys_user WHERE open_id = #{openId} limit 1
    </select>

    <select id="selectUserCountByArea" resultType="com.cnaidun.police.dto.StatisticsDTO">
        select
        count(id) as value,
        community_code as name
        from
        sys_user
        where
        role_id = '2'
        group by community_code
    </select>

    <update id="updateOpenIdByAccount" parameterType="java.util.Map">
        UPDATE sys_user SET open_id = #{openId} WHERE account = #{account}
    </update>

    <select id="findHaveGoldBeanUsers" resultType="com.cnaidun.police.dto.HaveGoldBeanDTO">
        SELECT id,gold_bean goldBean,community_unit_name communityUnitName FROM sys_user WHERE gold_bean > 0
    </select>

    <update id="updateBoldBean0" parameterType="java.util.List">
        UPDATE sys_user SET gold_bean = 0,score_status = '0'
        WHERE id IN
        <foreach collection="list" open="(" close=")" item="id" separator=",">
            #{id}
        </foreach>
    </update>
</mapper>